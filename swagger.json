{
  "swagger": "2.0",
  "info": {
    "title": "Restaurant Management System API",
    "description": "Complete API for managing a restaurant's operations including menu items, orders, employees, and tables.\n\n    Key Features:\n    - Menu Management: Create and manage menu items with prices, categories, and availability\n    - Order Processing: Handle customer orders from creation to completion\n    - Employee Management: Track staff information, roles, and assignments\n    - Table Management: Monitor table status, capacity, and current orders\n    \n    Authentication Instructions:\n    1. To login: Click the Authorize button and use GitHub OAuth\n    2. Check authentication status: Use the /auth/status endpoint\n    3. To logout: Use the /logout endpoint\n    \n    Important Notes:\n    - POST, PUT, and DELETE operations require authentication\n    - All responses are in JSON format\n    - Dates should be provided in ISO 8601 format\n    - IDs are MongoDB ObjectIds\n    \n    Error Handling:\n    - 200: Success\n    - 201: Resource created\n    - 400: Invalid input\n    - 401: Not authenticated\n    - 404: Resource not found\n    - 500: Server error",
    "version": "1.0.0",
    "contact": {
      "name": "Restaurant API Support",
      "url": "https://github.com/WTHACD/CSE341-P"
    }
  },
  "host": "cse341-p-wfbq.onrender.com",
  "basePath": "/",
  "tags": [
    {
      "name": "Authentication",
      "description": "OAuth endpoints for secure user authentication and session management"
    },
    {
      "name": "Menu Items",
      "description": "Manage the restaurant menu including items, prices, categories, and availability status"
    },
    {
      "name": "Orders",
      "description": "Handle customer orders from creation to delivery, including status updates and assignments"
    },
    {
      "name": "Employees",
      "description": "Manage staff information, roles, schedules, and track order assignments"
    },
    {
      "name": "Tables",
      "description": "Monitor table status, capacity, current orders, and reservations"
    }
  ],
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "githubAuth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "/login",
      "description": "GitHub OAuth2 Authentication"
    }
  },
  "paths": {
    "/auth/status": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/logout": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/menuItems/": {
      "get": {
        "tags": [
          "Menu Items"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Menu Items"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Pizza Margherita"
                },
                "description": {
                  "type": "string",
                  "example": "Classic pizza..."
                },
                "price": {
                  "type": "number",
                  "example": 12.5
                },
                "category": {
                  "type": "string",
                  "example": "Pizzas"
                },
                "stock": {
                  "type": "number",
                  "example": 50
                },
                "supplier": {
                  "type": "string",
                  "example": "Napoli Supplies"
                },
                "entryDate": {
                  "type": "string",
                  "example": "2025-09-26"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/menuItems/{id}": {
      "get": {
        "tags": [
          "Menu Items"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Menu Items"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Pizza Margherita"
                },
                "description": {
                  "type": "string",
                  "example": "Classic pizza..."
                },
                "price": {
                  "type": "number",
                  "example": 12.5
                },
                "category": {
                  "type": "string",
                  "example": "Pizzas"
                },
                "stock": {
                  "type": "number",
                  "example": 50
                },
                "supplier": {
                  "type": "string",
                  "example": "Napoli Supplies"
                },
                "entryDate": {
                  "type": "string",
                  "example": "2025-09-26"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Menu Items"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/orders/": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "example": [
                    "60c72b2f9b1d8c001f8e4d2a"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "tableNumber": {
                  "type": "number",
                  "example": 5
                },
                "status": {
                  "type": "string",
                  "example": "received"
                },
                "notes": {
                  "type": "string",
                  "example": "Extra cheese"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "preparing"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Orders"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tables/": {
      "get": {
        "tags": [
          "Tables"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter tables by status",
            "required": false,
            "type": "string",
            "enum": [
              "available",
              "occupied",
              "reserved"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Tables"
        ],
        "description": "Create a new table with the specified details",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Table information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tableNumber": {
                  "type": "number",
                  "example": 1
                },
                "capacity": {
                  "type": "number",
                  "example": 4
                },
                "status": {
                  "type": "string",
                  "example": "available"
                },
                "location": {
                  "type": "string",
                  "example": "Interior"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Table successfully created",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Table created successfully"
                },
                "tableId": {
                  "type": "string",
                  "example": "507f1f77bcf86cd799439011"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Validation error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tables/{id}": {
      "get": {
        "tags": [
          "Tables"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Tables"
        ],
        "description": "Update an existing table\\'s information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the table to update"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Updated table information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tableNumber": {
                  "type": "number",
                  "example": 1
                },
                "capacity": {
                  "type": "number",
                  "example": 6
                },
                "status": {
                  "type": "string",
                  "example": "available"
                },
                "location": {
                  "type": "string",
                  "example": "Terraza"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Table successfully updated"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Table not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Tables"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tables/{id}/order": {
      "get": {
        "tags": [
          "Tables"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employees/": {
      "get": {
        "tags": [
          "Employees"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter employees by status",
            "required": false,
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ]
          },
          {
            "name": "role",
            "in": "query",
            "description": "Filter employees by role",
            "required": false,
            "type": "string",
            "enum": [
              "Waiter",
              "Cashier",
              "Cook",
              "Manager"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Employees"
        ],
        "description": "Create a new employee with the specified details",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Employee information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "John"
                },
                "lastName": {
                  "type": "string",
                  "example": "Doe"
                },
                "role": {
                  "type": "string",
                  "example": "Waiter"
                },
                "email": {
                  "type": "string",
                  "example": "john.doe@restaurant.com"
                },
                "phoneNumber": {
                  "type": "string",
                  "example": "123-456-7890"
                },
                "hireDate": {
                  "type": "string",
                  "example": "2025-10-06"
                },
                "isActive": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Employee successfully created",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Employee created successfully"
                },
                "employeeId": {
                  "type": "string",
                  "example": "507f1f77bcf86cd799439011"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Validation error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employees/{id}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Employees"
        ],
        "description": "Update an existing employee\\'s information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the employee to update"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Updated employee information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "John"
                },
                "lastName": {
                  "type": "string",
                  "example": "Doe"
                },
                "role": {
                  "type": "string",
                  "example": "Manager"
                },
                "email": {
                  "type": "string",
                  "example": "john.doe@restaurant.com"
                },
                "phoneNumber": {
                  "type": "string",
                  "example": "123-456-7890"
                },
                "hireDate": {
                  "type": "string",
                  "example": "2025-10-06"
                },
                "isActive": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Employee successfully updated"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Employee not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Employees"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employees/{id}/orders": {
      "get": {
        "tags": [
          "Employees"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "example": [
                    "60c72b2f9b1d8c001f8e4d2a"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "tableNumber": {
                  "type": "number",
                  "example": 5
                },
                "status": {
                  "type": "string",
                  "example": "received"
                },
                "notes": {
                  "type": "string",
                  "example": "Extra cheese"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Table created successfully"
                },
                "employeeId": {
                  "type": "string",
                  "example": "507f1f77bcf86cd799439011"
                },
                "tableId": {
                  "type": "string",
                  "example": "507f1f77bcf86cd799439011"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Validation error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "preparing"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Orders"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/{id}/orders": {
      "get": {
        "tags": [
          "Employees"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/{id}/order": {
      "get": {
        "tags": [
          "Tables"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "hideModels": true,
  "hideSchemas": true
}